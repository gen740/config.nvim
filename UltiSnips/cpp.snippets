snippet fn "function"
auto $1($3) -> $2 {
  $0
}
endsnippet

snippet fora "for auto"
for (auto&& ${1:i} : ${2:v}){
  $0
}
endsnippet

snippet for "for int i"
for (int ${1:i} = 0; $1 < ${2:count}; $1++){
  $0
}
endsnippet

snippet fore "for int i"
for (int ${1:i} = 1; $1 <= ${2:count}; $1++){
  $0
}
endsnippet

snippet inc "#include <>"
#include <$1
$0
endsnippet

snippet mainn "main ()"
int main() {
	$0
	return 0;
}
endsnippet

snippet "(\w+)\.f" "postfix function" r
auto `!p snip.rv = match.group(1)`($1) -> $2 {
	$3
}
$0
endsnippet

snippet ce "constexpr"
constexpr $1
endsnippet

snippet sc "static constexpr"
static constexpr $1
endsnippet

snippet st "struct"
struct $1 {
	$2
};
$0
endsnippet

snippet ts "template struct"
template <class ${1:T}>
struct $2 {
	$3
};
$0
endsnippet

snippet tts "template struct"
template <class ${1:T}, class ${2:U}>
struct $3 {
	$4
};
$0
endsnippet

snippet tc "template class"
template <class ${1:T}>
class $2 {
	$3
};
$0
endsnippet

snippet ttc "template class"
template <class ${1:T}, class ${2:U}>
class $3 {
	$4
};
$0
endsnippet

snippet tp "template"
template <class ${1:T}>
$0
endsnippet

snippet ttp "template"
template <class ${1:T}, class ${2:U}>
$0
endsnippet
